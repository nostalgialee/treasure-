
1 简述解释型和编译型编程语言
    解释型语言
    编写的程序不需要编译，执行时，专门有一个解释器能够将VB语言翻译成机器语言
    这样解释型语言每执行一次就要翻译一次。
    
    编译型语言
    程序执行之前，需要一个专门的编译过程，
    通过编译系统，把源高级程序编译成为机器语言文件
    运行时不需要翻译，所以编译型语言的程序执行效率高。



2.python解释器种类以及特点
    CPython
    c语言开发的 使用最广的解释器
    
    IPython
    基于cpython之上的一个交互式计时器，交互方式增强，功能和cpython一样
    
    PyPy
    目标是执行效率 采用JIT技术 对python代码进行动态编译，提高执行效率
    
    JPython
    运行在Java上的解释器 直接把python代码编译成Java字节码执行
    
    IronPython
    运行在微软 .NET 平台上的解释器，把python编译成. NET 的字节码



3.请列出至少5个PEP8规范PEP8规范
        每个缩进级别使用4个空格

        每行代码的最大长度限制为79个字符

        若是导入多个库函数，应该分开依次导入
         a、标准库导入 b、相关的第三方库导入 c、本地应用程序的库导入

        代码更改时，相应的注释也要随之更改

        在表达式中避免无关的空格
        
            在括号或者大括号内
            在尾随逗号和后面的右括号之间
            在逗号，分号或者冒号前面
            函数名的与后面的参数的括号之间
        
        命名要规范，通俗易懂
        
        
        
4.ascii、Unicode、utf-8、gbk的区别
        ascii
        美国用的标准信息交换码，所有的字母的大小写，各种符号用二进制来表示，
        共有256中，加入些拉丁文等字符，1字节代表一个字符
        
        Unicode是万国码，两个字节表示一个字符，最多可以表示2^16个字符，特点：速度快，但浪费空间
        
        utf-8 为了改变Unicode的这种缺点，
        一个字节表示一个英文字符
        三个字节表示一个中文字符
        节省空间，速度慢
        
        gbk 是中文的字符编码，用2个字节代表一个字符
        

5.字节码与机器码的区别
        机器码：CPU可以直接读取运行的机器指令，运行速度最快，但是晦涩难懂
        字节码：一种中间状态（中间码）的二进制文件，需要直译器转译后成为机器码
        
        
6.列举你所了解的所有Python2和Python3的区别
        1 p2中没有nonlocal关键字，修改临时变量只能将其变为可变数据类型，b=[a]
        2 p2: print'1' ----  p3 print('1')
        3 p3中加入Unicode字符串，使用编码存储字符串，例如可以使用utf-8输入中文
        4 Python3去掉long类型，新增了bytes。
        5 Python 3整数之间做除法可以得到浮点数的结果，不需要进行数据格式转换1/2=0.5 
            Python 2整数int间除法结果为把运算结果去尾的整数1/2=0，3/2.0=1.5
        6 Python3 中 range()，Python2 中 xrange()。
        7 python2中的不等于号可以是!=或者<>，python3只能是!=
        8 python2中raw_input()用来输入字符串，而python3中使用input()来输入字符串
        9.py2有long类型，py3 没有long类型，只有int类型，包含了long类型
        

7.python2与python3编码的区别
        py2的字符串有两种类型：unicode类型和str类型
            Unicode即为Unicode编码，str类型指的是除了Unicode以外所有的编码，
            包括ascii编码、utf8编码、gbk编码、cp936编码等
        
        
        py3的字符串有两种类型：bytes类型和str类型
            str类型即为Unicode编码, bytes类型指的是除了Unicode以为所有的编码
            包括ascii编码、utf8编码、gbk编码、cp936编码等
            

8.py2项目如何迁移成py3
        先备份原文件，然后使用python3自带工具2to3.py将py2文件转换位py3文件
        手动将不兼容的代码改写成兼容py3的代码
        
        
        
9.xrange和range的区别
xrange和range用法相同，但是xrange是一个生成器，range结果是一个列表。xrange做循环的时候性能比range好。
        
        
二、常见内容        
10.is和==的区别
is比较的是两个对象的id是否相同,内存地址是否相同
==比较的是两个对象的值是否相同



11.如何实现字符串的反转？如：name=felix，反转成name=xilef
    1.
        name = name[::-1]
    2.
        name = name.split('')
        name.reverse()
        name = ''.join(name)
    3.
        from functools import reduce
        name=reduce(lambda x, y: y+x, name)
        

12.文件操作时，xreadlines和readlines的区别
        readlines: 返回的是一个列表
        xreadlines：返回的是一个生成器
        

13.请列举布尔值位False的常见值
    [], None, '', 0 {}, tuple(), set()


*************字典这里要好好看看
14.列举字符串、列表、元组、字典每个常用的5个方法
    字符串
        strip()
        split()
        startwith()
        replace()
        find() # 查找字符串，存在返回第一个索引，不存在返回-1
    
    列表
        count()
        append()
        extend()
        pop()    删除一个对象，默认最后一个
        remove() 删除指定的第一个匹配项
        insert() 插入对象
        index()
        
    元祖
        count() ->统计在元组中出现的个数
        index() ->获取索引
    
    字段
        keys() ->获取所有的键
        pop() ->删除指定的键的键值对
        popitem() ->随机删除一个键值对 ******
        update() ->更新字典，参数为一个字典，如果键已存在，则更改，不存在则添加
        setdefault() ->如果键存在则，返回该键对应的值，如果不存在，设置该键为设置的默认值，然后返回该键对应的值
        get() ->返回键对应的值
        fromkeys() ->创建字典，第一个参数为可迭代对象，每个值变成字典的键，第二个参数为每个键的默认值





# 需要弥补的地方
    迭代器 生成器
    进程相关需要好好复习
    数据库
    
    



        
        
        
        
        
        
        
        
        
        
        
        
        
