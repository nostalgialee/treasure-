# -*- coding:utf-8 -*-
# @Time    : 2022/6/17 15:01
# @File    : network_basics.py
# Author: lee



"""
1.python的底层网络交互模块有哪些

    socket，urllib，requests，pycurl

"""






"""
2.简述OSI七层协议

    为了实现计算机系统的互连，OSI参考模型 
    把整个网络的通信功能划分为7个层次
    
    也定义了：
        层次之间的相互关系以及各层所包括的服务及每层的功能。
        
    应用层
    表示层
    会话层
    
    传输层
    
    网络层             
    数据链路层
    物理层
    
    高
    
        上三层：面向资源子网
            应用层
                应用层提供为应用软件而设的接口，以设置与另一应用软件之间的通信。
                例如: HTTP，HTTPS，FTP，SSH等。
            
            
            表示层
                把 数据 转换为 
                    能与接收者的系统格式兼容并适合传输的格式。
            
            
            会话层
                会话层负责在数据传输中设置和
                维护计算机网络中两台计算机之间的通信连接。
        
        
        
        传输层：而传输层则是七层中最为重要的一层。
            -它位于上层和下层中间，起承上启下的作用
                
                传输层 tcp 协议
                    把传输表头加至数据以形成数据包。
                传输表头包含了所使用的协议等发送信息。
                例如传输控制协议（TCP）等。
        
        
        下三层：面向数据通信
            
            网络层 ip 协议
                网络层决定数据的路径选择和转寄，将网络表头加至数据包，以形成分组。
                网络表头包含了网络数据。
                例如互联网协议（IP）等。
            
            数据链路层
                **数据链路层负责网络寻址、错误侦测和改错。**
                当表头和表尾被加至数据包时，会形成帧。
                数据链表头是包含了物理地址和错误侦测及改错的方法。
                数据链表尾是一串指示数据包末端的字符串。
            
            物理层 
                物理层在局部局域网上传送数据帧，
                它负责管理***计算机通信设备和网络媒体之间的互通***。
                包括了针脚、电压、线缆规范、集线器、中继器、网卡、
                主机适配器等。
    
    低

"""



"""
3.什么是C/S和B/S架构

CS
    客户端服务端架构
        客户端 包含一个或者多个在电脑上运行的应用程序
        服务端：1. 数据库服务端 客户端通过数据库连接访问服务端的数据
              2.socket服务端 客户端通过 socket 与服务端进行通信
    
BS
    浏览器/服务端架构
        web 浏览器，极少事务在前端实现，主要的逻辑在后端实现
        
"""





"""
4.简述TCP三次握手，四次挥手的流程。

    seq号: 序列号，四个字节，用来标记数据段的顺序
        TCP把连接中发送的所有数据字节都编上一个序号，
        第一个字节的编号由本地随机产生；给字节编上序号后，
        就给每一个报文段指派一个序号；
        序列号seq就是这个报文段中的第一个字节的数据编号。
    
    ack号：占4个字节，期待收到对方下一个报文段的第一个数据字节的序号；
        序列号表示报文段携带数据的第一个字节的编号；
        而确认号指的是期望接收到下一个字节的编号；
        因此当前报文段最后一个字节的编号+1即为确认号。
        
    
    确认ACK：占1位，仅当ACK=1时，确认号字段才有效。ACK=0时，确认号无效
    
    同步SYN：连接建立时用于同步序号。当SYN=1，ACK=0时表示：
    这是一个连接请求报文段。
    若同意连接，则在响应报文段中使得SYN=1，ACK=1。
    因此，SYN=1表示这是一个连接请求，或连接接受报文。
    SYN这个标志位只有在TCP建产连接时才会被置1，握手完成后SYN标志位被置0。
    
    
    终止FIN：用来释放一个连接。FIN=1表示：此报文段的发送方的数据已经发送完毕，并要求释放运输连接

    PS：ACK、SYN和FIN这些大写的单词表示标志位，其值要么是1，要么是0；ack、seq小写的单词表示序号。




    三次握手
        第一次握手
            客户端进程打开，并向服务端发送请求报文，其首部 SYN=1, seq=x
        

        第二次握手
            服务端进程被动打开，若同意客户端的请求，则回复确认报文
                其首部 SYN=1 ACK=1  seq=y ack=x+1
                
   
        第三次握手
            客户端收到确认报文之后，通知上层链接建立，并向服务端发送报文
                其首部 ACK=1 ack=y+1    
            当服务器收到客户端的确认报文之后，也通知其上层应用进程连接已建立。
        
        
        
    四次挥手
        第一次挥手
            数据传输完毕之后，客户端应用进程发出链接释放报文，并停止发送数据
            其首部 FIN=1 seq=u
        
        
        第二次挥手
            服务端收到客户端发送的释放报文后，发出确认报文
            其首部 ACK=1 ack=u+1 seq=v
            此时本次链接进去了半关闭状态，客户端不再向服务端发送数据，
                                     而服务端会继续发送
        
        第三次挥手
            服务端已经没有向客户端发送的数据了，其应用进程就会通知服务器释放TCP链接
            其首部：FIN=1 ACK=1 ack=u+1 seq=w
            
        
        第四次挥手
            客户端收到服务端发送的释放报文之后，必须发出
            ACK=1 seq=u+1 ack=w+1
            然后经历 2MSL（最长报文寿命）后，结束本次TCP链接。


    





"""



"""
5.如果已经建立了TCP连接，
但是客户端突然出现故障了怎么办

    TCP 设有一个保活计时器
        客户端出现故障的时候，服务端不能一直等待
        
        保活计时器 在服务端每次接收到客户端请求之后 *重置* 计时器
            设置时长为两个小时
        
        若两个小时服务端没有接收到客户端发送的数据，
        服务器会发送一个探测报文daunt
        每隔 75s 发送一次，一连发送十个依然没有反应，
        则认定客户端发生故障，断开TCP链接




"""




"""
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
6.什么是arp协议 --- 第三层协议 网络层 与 ip协议 一层的

    1.ARP全程 ‘Address Resolution Protocol’ 地址解析协议
    
    2.负责局域网内 通过 IP 地址 获取主机的MAC地址
    
    3.MAC地址48位主机的物理地址，局域网内唯一
    
    4.ARP协议类似于 DNS协议，但是不需要配置服务
    
    5.ARP协议是第三层协议 （网络层）
    

"""






"""
7.TCP和UDP的区别

    1.TCP 面向连接，UDP是无连接的，即发送数据前不需要建立连接
    
    2.TCP 提供可靠的服务，无差错，不丢失，不重复，按序到达
        UDP 尽最大可能交付，不保证可靠
    
    3.UD 拥有较好的时效性。工作效率高，适用于高速传输与即时通讯
    
    4.每一条 TCP 连接只能是点对点的， UDP 支持一对一、一对多、多对一、多对多

    5.TCP 对于系统资源要求较高，UDP 较少


"""








"""

8.为什么基于tcp协议的通信比基于udp协议的通信更可靠

    TCP是面向连接的传输协议，每一次都需要建立互相信任的连接。中间有三次握手的过程
    UDP是面向不连接的传输协议，不需要建立安全连接
    
"""








"""
9.什么是局域网和广域网
    局域网（local area network）--- 简称 LAN
        指的是 某以区域内由多台计算机互联成的计算机组
        某一区域：同一办公室、同一建筑、同一公司、同一学校
        
        局域网 可以实现 文件管理、应用软件共享、打印机共享、扫描机共享
        工作组内的日程安排、电子邮件和传真通信服务等功能
        
        局域网是封闭的。
            （可以由两台计算机组成，也可以由一个公司内的上千台计算机组成）
    
    
    广域网：简称WAN
        是一种跨越大、地域性的计算机网络集合，通常可以跨越省市甚至一个国家
            广域网包括了大大小小的子网，子网可以使局域网，也可以是小型广域网
           
           . 
    两者区别：
        范围不同，广域网比局域网广
        接口类型不同
        速率不同
        协议不同
    

"""







"""
10.什么是socket？简述基于tcp协议的socket通信流程？
    
    套接字，用于描述 ip 与 端口 --- 是一个通信链的句柄。
    
    通信流程：
        1.服务端创建了一个 ServerSocket 对象，指定端口号，
            ServerSocket 对象等待客户端连接请求
            
        2.客户端创建一个 socket 对象，指定主机地址和端口，
            向服务端发出请求连接
            
        3.服务端收到客户端的连接请求，建立一条 TCP 链接
            再创建一个Socket对象与客户端的Socket对象进行通信。
            
            
        4.服务端和客户端 分别创建 字节输入流 和 字节输出流，通过字节输入流
            获得对方发来的数据，通过字节输出流向对方发送数据
            
        5.当一方结束通信时，向对方发送结束信息，另一方接收到结束信息后，双方
            分别关闭各自的 TCP 连接
            
        6. ServerSocket 对象停止等待客户端的连接请求
        



"""





"""
11.什么是粘包？出现粘包的原因？

    粘包：
        多个数据包被连续存储在缓冲中
        而对数据包进行读取的时候，由于无法确定发送方的边界
        而是采用了某个估测值的时的大小进行读取
        若双方的 size 不一致的时候，导致粘包
    
    
    原因：
        发送方：
            TCP协议本身，发送数据的时候为了提高效率，发送方会收集足够的数据后
                统一发送。
            若连续发送的几条数据都较短，TCP协议的优化算法会将几条数据合并发送至
            接收端，从而造成粘包
        
        
        
        接收方：
            接收方进程 接受不及时，导致粘包
                接收方接受的数据会先存储在缓冲区内，用户进程还未将数据取出的时候
                下一条数据接收至缓冲区内，导致后一个数据包的头部拼接到上一个数据包的尾部
                用户进程会按照预设的缓冲区大小取数据，造成粘包
        
        
    


    
    原因：
        有可能是发送方造成的，也可能是接收方造成的
        
        
            发送方造成
                    前提：发送方引起的粘包 是由于 TCP 协议本身造成的，
                TCP为提高传输效率，发送方需要收集到足够的数据后才统一发送，
                    原因：若连续几次发送的数据都很少，
                TCP 会通过优化算法把数据合成一包后一次发送出去，
                这样造成接收方收到粘包数据
        
        
            接收方造成
                接收方进程 接受不及时，从而导致粘包现象
                    接收方先将数据放在系统接收缓冲区，用户进程从缓冲区取数据
                若在下包数据到来时，上一包数据未被取走，
                下一包数据到系统接受的缓冲区时就拼接到上一包数据之后，
                用户进程会按照预设的缓冲区大小取数据，造成粘包
                
   
“””
12.发生粘包现象如何处理？

    发送方造成的粘包
        通过编程来避免，TCP提供了强制数据立即传送的指令 PUSH，
        TCP收到指令之后，就会立即发送数据，不必等到发送缓冲区满。
        
        
    接收方造成的粘包
        对于接收方引起的粘包，则可通过
            优化程序设计，
            精简接受进程工作量
            提高接受进程优先级
            
            使其及时接受数据，从而尽量避免出现粘包

    由接收方控制，将一包数据按结构字段，人 为控制分多次接受，然后合并
    通过这种方式来避免粘包。


"""









"""
14.什么是防火墙？防火墙的作用是什么？

    防火墙是一种非常有效的网络安全模型，通过它可以
    隔离 --- 风险区域 --- 安全区域 的连接
    同时不会妨碍人们对于风险区域的访问
    
    一般设置职 核心交换机 与 外网之间
    
    作用：
        过滤进出网络的数据
        管理进出访问网络的行为
        封堵某些禁止业务
        记录通过防火墙信息内容和活动
        对网络攻击监测和告警 
        

"""





"""
15.路由器和交换机的区别

    交换机 --- 数据链路层（第二层）
        是一种用于电信号转发的网络设备
    
    
    
    路由器 --- 网络层（第三层）
        是链接因特网中各局域网和广域网的设备
    
    
    路由器提供防火墙服务
    传统交换机只能分隔冲突域，不能分隔广播域，二级路由器可以分隔广播域


"""




"""
16.什么是域名解析

    域名解析
        就是把域名指向 网络空间 IP，
        让人们通过注册的域名可以方便的访问到网站的一种服务
        IP 地址是网络上表示站点的数字地址，为了方便记忆
        采用了用域名来代替 ip 地址 标识站点地址，
        域名解析就是 域名 -- IP 的解析过程
        
"""

"""
DNS域名解析过程

                 存在
    浏览器检查  ————————->  操作系统检查 ---
                 |
                 | 不存在
                 |
               
                

    1.浏览器检查缓存中有没有这个域名对应的解析后的IP地址，
        如果缓存中有，解析过程结束。
        缓存大小、时间都有限制，时间由TTL属性决定

    2.如果浏览器缓存中有，浏览器会查找操作系统缓存中
        有无这个域名DNS解析之后的结果。操作系统也有一个域名解析的过程
        windows 通过 C:\Windows\System32\drivers\etc\hosts
        浏览器会优先使用这个解析结果（Win7已将hosts设置为只读），
        linux系统中/etc/named.conf。
        目前为止都是在本机完成，
        
        如果未完成，才会真正请求域名服务器解析域名。
        
        
        
    3.网络配置中 会有 DNX服务器地址，操作系统会把域名发送给 LDNS, 本地区的
        域名服务器，通常都会提供一个本地互联网接入的DNS解析服务，就在你所在的
        城市某个角落，通过 ipconfig 可以看到
        
        
    4.如果LDNS仍然没有命中，则向RootServer域名服务器请求解析。
    
    5.根域名服务器向本地域名服务器返回一个所查 询域的主域名服务器（gTLD Server）。
        国际顶级域名服务器（.com、.cn、.org等），全球13台。
        
    6.本地域名服务器（Local DNS Server）再向上一步返回的gTLD发送请求
    
    7.gTLD返回域名对应NameServer域名服务器地址，通常由你购买域名的服务商提供。
    
    8.NameServer服务器查询域名与IP映射关系表，
        返回目标IP记录和TTL值给DNS Server域名服务器。
    
    9.Local DNS Server根据TTL缓存该IP解析。
    
    10.缓存结果返回给用户，用户根据TTL缓存到本地操作系统中，域名解析过程结束。




"""





"""
17.如何修改本地hosts文件

    进入
        c:\windows\system32\drivers\etc进行修改


"""









"""

18.什么是cdn
    
    cdn 内容分发网络，其目的是让用户能够更快的得到请求的数据
    
    cdn 就是用来加速的，它能让用户就近访问数据，
        这样就会更快地获取到需要的数据

"""








"""
19.traceroute使用哪种网络协议
"""






"""
20.什么是twisted框架
"""







"""
21.什么是keepalived
"""








"""
22.什么是haproxy？
"""








"""
23.什么是负载均衡
"""






"""
24.什么是rpc

    rpc --- 远程调用 --- 是一种协议
    程序可以使用这种协议向网络中的另一台计算机上的程序请求服务
    
    1. rpc 采用的是 客户端--服务器 模式
        请求程序就是一个客户机，服务提供程序就是一个服务器
    2.  
        (1)首先，客户机调用进程发送一个有进程参数的调用信息到服务进程，
            然后等待应答消息
        
        (2)服务端进程保持睡眠状态，知道调用信息到达为止
            当一个调用信息到达，服务器获得进程参数，计算结果，发送答复信息，
            然后等待下一个调用信息，
        
        (3) 最后，客户端调用进程接收答复信息，
            获得进程结果，然后调用执行继续进行。 

    

"""





"""
25.什么是正向代理和反向代理


"""